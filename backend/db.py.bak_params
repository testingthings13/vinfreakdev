from sqlmodel import create_engine, SQLModel, Session
from sqlalchemy import text
from backend_settings import settings

engine = create_engine(
    settings.DATABASE_URL,
    echo=False,
    connect_args={"check_same_thread": False} if settings.DATABASE_URL.startswith("sqlite") else {}
)

def init_db():
    # Create non-cars tables from metadata
    SQLModel.metadata.create_all(engine)
    with Session(engine) as s:
        # Ensure cars table has deleted_at column (soft delete)

        # SQLite: add column if missing
        s.exec(text("""
            CREATE TABLE IF NOT EXISTS settings (key TEXT PRIMARY KEY, value TEXT);
        """))
        # Add deleted_at column if it doesn't exist
        pragma = s.exec(text("PRAGMA table_info(cars)")).mappings().all()
        cols = {r['name'] for r in pragma}
        if "deleted_at" not in cols:
            s.exec(text("ALTER TABLE cars ADD COLUMN deleted_at TEXT"))
        # Indices
        s.exec(text("CREATE INDEX IF NOT EXISTS idx_cars_vin ON cars(vin)"))
        s.exec(text("CREATE INDEX IF NOT EXISTS idx_cars_year ON cars(year)"))
        s.exec(text("CREATE INDEX IF NOT EXISTS idx_cars_make ON cars(make)"))
        s.exec(text("CREATE INDEX IF NOT EXISTS idx_cars_model ON cars(model)"))
        s.exec(text("CREATE INDEX IF NOT EXISTS idx_cars_posted_at ON cars(posted_at)"))
        s.exec(text("CREATE INDEX IF NOT EXISTS idx_cars_status ON cars(auction_status)"))
        s.commit()
        # Default settings
        defaults = {
            "site_title": "Vinfreak",
            "site_tagline": "Discover performance & provenance",
            "theme": "dark",
            "logo_url": "",
        }
        for k, v in defaults.items():
            r = s.exec(text("SELECT key FROM settings WHERE key=:k"), {"k": k}).first()
            if not r:
                s.exec(text("INSERT INTO settings(key,value) VALUES (:k,:v)"), {"k": k, "v": v})
        s.commit()
